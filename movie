#!/usr/bin/env ruby

require_relative 'lib/environment'
require_relative 'lib/parse_arguments'
require_relative 'models/movie_entry'

command = ARGV[0]
options = ParseArguments.parse
options[:title] = ARGV[1]

Environment.environment = options[:environment] || "production"
database = Environment.database_connection

if command == "search"
  puts "What do you want to search for?"
  input = $stdin.gets.chomp
  puts "You asked for: #{input}"
  statement = "select cinephile_movies_test.title from cinephile_movies_test where title LIKE '%#{input}'"
  results = database.execute(statement)
  puts results
elsif command == "add"
  error_messages = ParseArguments.validate(options)
  if error_messages.empty?
    movie_entry = MovieEntry.new(options)
    movie_entry.save
    puts "A movie named #{movie_entry.title}, with seen? #{movie_entry.seen}, own? #{movie_entry.own}, wishlist see #{movie_entry.wishlist_see}, wishlist own #{movie_entry.wishlist_own}, user rating #{movie_entry.user_rating} was created"
  else
    puts error_messages
  end
elsif command == "list"
  puts "All Movies:"
  puts MovieEntry.all
else
  puts "Command not implemented"
end